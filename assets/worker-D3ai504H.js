(function(){"use strict";/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */const x=Symbol("Comlink.proxy"),z=Symbol("Comlink.endpoint"),N=Symbol("Comlink.releaseProxy"),M=Symbol("Comlink.finalizer"),h=Symbol("Comlink.thrown"),S=e=>typeof e=="object"&&e!==null||typeof e=="function",H={canHandle:e=>S(e)&&e[x],serialize(e){const{port1:t,port2:r}=new MessageChannel;return P(e,t),[r,[r]]},deserialize(e){return e.start(),_(e)}},L={canHandle:e=>S(e)&&h in e,serialize({value:e}){let t;return e instanceof Error?t={isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:t={isError:!1,value:e},[t,[]]},deserialize(e){throw e.isError?Object.assign(new Error(e.value.message),e.value):e.value}},A=new Map([["proxy",H],["throw",L]]);function F(e,t){for(const r of e)if(t===r||r==="*"||r instanceof RegExp&&r.test(t))return!0;return!1}function P(e,t=globalThis,r=["*"]){t.addEventListener("message",function f(n){if(!n||!n.data)return;if(!F(r,n.origin)){console.warn(`Invalid origin '${n.origin}' for comlink proxy`);return}const{id:s,type:g,path:c}=Object.assign({path:[]},n.data),u=(n.data.argumentList||[]).map(y);let a;try{const o=c.slice(0,-1).reduce((i,d)=>i[d],e),l=c.reduce((i,d)=>i[d],e);switch(g){case"GET":a=l;break;case"SET":o[c.slice(-1)[0]]=y(n.data.value),a=!0;break;case"APPLY":a=l.apply(o,u);break;case"CONSTRUCT":{const i=new l(...u);a=U(i)}break;case"ENDPOINT":{const{port1:i,port2:d}=new MessageChannel;P(e,d),a=j(i,[i])}break;case"RELEASE":a=void 0;break;default:return}}catch(o){a={value:o,[h]:0}}Promise.resolve(a).catch(o=>({value:o,[h]:0})).then(o=>{const[l,i]=p(o);t.postMessage(Object.assign(Object.assign({},l),{id:s}),i),g==="RELEASE"&&(t.removeEventListener("message",f),R(t),M in e&&typeof e[M]=="function"&&e[M]())}).catch(o=>{const[l,i]=p({value:new TypeError("Unserializable return value"),[h]:0});t.postMessage(Object.assign(Object.assign({},l),{id:s}),i)})}),t.start&&t.start()}function V(e){return e.constructor.name==="MessagePort"}function R(e){V(e)&&e.close()}function _(e,t){const r=new Map;return e.addEventListener("message",function(n){const{data:s}=n;if(!s||!s.id)return;const g=r.get(s.id);if(g)try{g(s)}finally{r.delete(s.id)}}),k(e,r,[],t)}function w(e){if(e)throw new Error("Proxy has been released and is not useable")}function T(e){return m(e,new Map,{type:"RELEASE"}).then(()=>{R(e)})}const E=new WeakMap,b="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{const t=(E.get(e)||0)-1;E.set(e,t),t===0&&T(e)});function D(e,t){const r=(E.get(t)||0)+1;E.set(t,r),b&&b.register(e,t,e)}function I(e){b&&b.unregister(e)}function k(e,t,r=[],f=function(){}){let n=!1;const s=new Proxy(f,{get(g,c){if(w(n),c===N)return()=>{I(s),T(e),t.clear(),n=!0};if(c==="then"){if(r.length===0)return{then:()=>s};const u=m(e,t,{type:"GET",path:r.map(a=>a.toString())}).then(y);return u.then.bind(u)}return k(e,t,[...r,c])},set(g,c,u){w(n);const[a,o]=p(u);return m(e,t,{type:"SET",path:[...r,c].map(l=>l.toString()),value:a},o).then(y)},apply(g,c,u){w(n);const a=r[r.length-1];if(a===z)return m(e,t,{type:"ENDPOINT"}).then(y);if(a==="bind")return k(e,t,r.slice(0,-1));const[o,l]=C(u);return m(e,t,{type:"APPLY",path:r.map(i=>i.toString()),argumentList:o},l).then(y)},construct(g,c){w(n);const[u,a]=C(c);return m(e,t,{type:"CONSTRUCT",path:r.map(o=>o.toString()),argumentList:u},a).then(y)}});return D(s,e),s}function W(e){return Array.prototype.concat.apply([],e)}function C(e){const t=e.map(p);return[t.map(r=>r[0]),W(t.map(r=>r[1]))]}const O=new WeakMap;function j(e,t){return O.set(e,t),e}function U(e){return Object.assign(e,{[x]:!0})}function p(e){for(const[t,r]of A)if(r.canHandle(e)){const[f,n]=r.serialize(e);return[{type:"HANDLER",name:t,value:f},n]}return[{type:"RAW",value:e},O.get(e)||[]]}function y(e){switch(e.type){case"HANDLER":return A.get(e.name).deserialize(e.value);case"RAW":return e.value}}function m(e,t,r,f){return new Promise(n=>{const s=G();t.set(s,n),e.start&&e.start(),e.postMessage(Object.assign({id:s},r),f)})}function G(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}P((e,t)=>e.reduce((r,f,n)=>{const s=255-Math.abs(f-t[n]);return r+s},0))})();
